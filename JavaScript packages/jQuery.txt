


/*
jQuery is a JavaScript library designed to simplify HTML DOM tree traversal and manipulation,
as well as event handling, CSS animation, and Ajax. It is free, open-source software using
the permissive MIT License. Web analysis indicates that it is the most widely deployed
JavaScript library by a large margin.

jQuery's syntax is designed to make it easier to navigate a document, select DOM elements,
create animations, handle events, and develop Ajax applications. jQuery also provides capabilities
for developers to create plugins on top of the JavaScript library.



------------------------------------------------------------------------------------------------
Including jQuery:

There are two main ways to include jQuery in your projects:
    1. Linking a CDN-hosted file.
    2. Downloading the jQuery file from its official website and linking it locally using a <script> tag.

Example of linking jQuery from a CDN:
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>



------------------------------------------------------------------------------------------------
BASICS



Using the $ sign to select elements from the DOM:
    $() is essentially a shortcut for document.querySelectorAll()

Examples:
    $('a'); // Selects all <a> tags.
    $('.container'); // Selects all elements with the class "container".
    $('#special'); // Selects the element with the id "special".



Adding CSS Properties:
    Use .css("property", "value") to add or change CSS properties.

Example:
    var x = $('h1');
    x.css('color', 'red');
    x.css('background', 'black');



Editing Multiple CSS Properties:
    Pass a JavaScript object with the CSS properties and values to .css() method.

Example:
    var objCss = {
        color: 'white',
        background: 'black',
        border: '2px solid red'
    };
    x.css(objCss);



Selecting a Single Item by Its Index:
    Use .eq(index) to select a single item by its index from a jQuery collection.

Example:
    var listItems = $('li');
    listItems.eq(2).css(objCss); // Applies CSS to the third <li> element.



Simplifying DOM Methods:
    .text() and .html() are jQuery's alternatives to .textContent and .innerHTML.

Examples:
    $('h1').text('New Text');
    $('h1').html('<em>New Text</em>');



Changing Attributes and Values:
    .attr("attribute", "value") to change an attribute.
    .val("value") to change the value of an input field.

Examples:
    $('input').eq(1).attr('type', 'checkbox');
    $('input').eq(0).val('New Placeholder');



Adding/Removing Classes:
    .addClass("className"), .removeClass("className"), .toggleClass("className").

Examples:
    $('h1').addClass('turnRed');
    $('input').eq(0).addClass('turnBlue');
    $('h1').toggleClass('turnRed'); // Toggle on/off the "turnRed" class on <h1>.




------------------------------------------------------------------------------------------------
EVENTS



Handling Clicks:
    $('selector').click(function() { /* Handler */ });

Example:
    $('h1').click(function() {
        console.log('There was a click');
    });



Using 'this' within Event Handlers:
    $(this) refers to the element that triggered the event.

Example:
    $('h1').click(function() {
        $(this).text('I was changed!');
    });



Keyboard Events:
    .keypress(), .keydown(), .keyup() for handling keyboard events.

Example:
    $('input').eq(0).keypress(function(event) {
        if (event.which === 13) { // Enter key
            $('h3').toggleClass('turnRed');
        }
    });



The .on() Method:
    A more flexible way to attach event handlers, equivalent to addEventListener.

Examples:
    $('h1').on('dblclick', function() {
        $(this).toggleClass('turnBlue');
    });

    $('h1').on('mouseenter', function() {
        $(this).toggleClass('turnRed');
    });



Effects and Animations:
    .fadeIn(), .fadeOut(), .slideUp(), .slideDown() for simple animations.

Example:
    $('input').eq(1).on('click', function() {
        $('.container').fadeOut(3000); // Fades out over 3 seconds
    });



Note: It's important to ensure that jQuery is properly included in your project and to use $(document).ready()
or $(function() { ... }); to ensure your code runs after the DOM is fully loaded.
*/
