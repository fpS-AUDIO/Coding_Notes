



///////////////////////////////
// THE SPREAD OPERATOR (...) //
///////////////////////////////

/*  The spread operator (...) was introduced in ES6 (2015) and extended to work with objects in 2018.
    - It is used to expand elements of an iterable (like arrays, strings) into individual elements.
    - Unlike destructuring, it doesnâ€™t create new variables.
    - Typically used on the right side of the assignment operator.
    - It creates a shallow copy of the iterable or object. */

// Basic Syntax
const arrayExample = [2, 7, 3];
const newArray = [1, ...arrayExample, 9];
console.log(newArray); // Output: [1, 2, 7, 3, 9]

// Expanding an Array
console.log(...newArray); // Output: 1 2 7 3 9

// Copying an Array
const newArrayCopy = [...newArray];

// Joining Arrays
const joinedArrays = [...newArray, ...arrayExample];




// Real-World Examples: Using in Functions
const restaurant = {
  categories: [`Italian`, `Pizzeria`, `Vegan`],
  starterMenu: [`Focaccia`, `Bruschetta`, `Caprese`, `salat`],
  mainMenu: [`Pizza`, `Carbonara`, `Risotto`, `Lasagna`],

  orderPasta: function (ing1, ing2, ing3) {
    console.log(`Here is your pasta with: ${ing1}, ${ing2}, and ${ing3}`);
  },
};

// Building an array then spreading into function arguments
const ingredients = [
  prompt("Let's make pasta. Ingredient #1:"),
  prompt("Ingredient #2:"),
  prompt("Ingredient #3:"),
];
restaurant.orderPasta(...ingredients);

// Copying and Modifying Objects
const newRestaurant = { ...restaurant, foundIn: 1998 };
newRestaurant.categories = ['French'];
console.log(newRestaurant); // Original restaurant object is unchanged



/*  Best Practices and Additional Points:
    - Use the spread operator for combining arrays or objects, passing array elements as function arguments, and making shallow copies.
    - Be cautious with deep nested objects or arrays as the spread operator performs a shallow copy.
    - The spread operator is different from the rest parameters syntax, which is used in function declarations to accept an indefinite number of arguments.
    - In addition to arrays and strings, the spread operator can also be used with other iterables like maps and sets.  */

// Example: Using Spread Operator with Maps
const mapExample = new Map([['key1', 'value1'], ['key2', 'value2']]);
const clonedMap = new Map([...mapExample]);
console.log(clonedMap); // Clones the map

// Example: Using Spread with Sets
const setExample = new Set([1, 2, 3, 4, 5]);
const clonedSet = new Set([...setExample]);
console.log(clonedSet); // Clones the set

